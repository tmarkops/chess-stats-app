{"ast":null,"code":"var _jsxFileName = \"/Users/tommymarkopoulos/Desktop/coding/Git_Repos/chess-app/src/components/WinsByBlackDonut.js\";\nimport React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WinsByBlackDonut(_ref) {\n  let {\n    cumulativeData\n  } = _ref;\n  ChartJS.register(ArcElement, Tooltip, Legend);\n  const getFilteredData = () => {\n    let wins = 0;\n    let losses = 0;\n    let draws = 0;\n    Object.keys(cumulativeData.games_by_time).forEach(key => {\n      wins += cumulativeData.games_by_time[key].win;\n      losses += cumulativeData.games_by_time[key].loss;\n      draws += cumulativeData.games_by_time[key].draw;\n    });\n    return [wins, losses, draws];\n  };\n  const options = {\n    plugins: {\n      title: {\n        display: true,\n        text: 'Win Percentage',\n        font: {\n          size: 20\n        }\n      },\n      legend: {\n        position: 'right'\n        // display: false\n      }\n    }\n  };\n\n  const labels = Object.keys(cumulativeData.games_by_time.morning);\n  let data = {\n    labels,\n    datasets: [{\n      label: 'frequency',\n      data: getFilteredData(),\n      backgroundColor: ['rgb(75, 192, 192)', 'rgb(255, 99, 132)', 'rgb(53, 162, 235)'],\n      borderColor: ['rgb(75, 192, 192)', 'rgb(255, 99, 132)', 'rgb(53, 162, 235)'],\n      borderWidth: 1\n    }]\n  };\n  const winPercent = data => {\n    const wins = data.datasets[0].data[0];\n    const losses = data.datasets[0].data[1];\n    const draws = data.datasets[0].data[2];\n    return Math.round(100 * wins / (wins + losses + draws));\n  };\n  const textCenter = {\n    id: \"textCenter\",\n    beforeDatasetsDraw(chart, args, pluginOptions) {\n      const {\n        ctx,\n        data\n      } = chart;\n      ctx.save();\n      ctx.font = 'bolder 15px sans-serif';\n      ctx.fillStyle = 'green';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(`${winPercent(data)}%`, chart.getDatasetMeta(0).data[0].x, chart.getDatasetMeta(0).data[0].y);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Doughnut, {\n      options: options,\n      data: data,\n      plugins: [textCenter]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_c = WinsByBlackDonut;\nexport default WinsByBlackDonut;\nvar _c;\n$RefreshReg$(_c, \"WinsByBlackDonut\");","map":{"version":3,"names":["React","Chart","ChartJS","ArcElement","Tooltip","Legend","Doughnut","jsxDEV","_jsxDEV","WinsByBlackDonut","_ref","cumulativeData","register","getFilteredData","wins","losses","draws","Object","keys","games_by_time","forEach","key","win","loss","draw","options","plugins","title","display","text","font","size","legend","position","labels","morning","data","datasets","label","backgroundColor","borderColor","borderWidth","winPercent","Math","round","textCenter","id","beforeDatasetsDraw","chart","args","pluginOptions","ctx","save","fillStyle","textAlign","textBaseline","fillText","getDatasetMeta","x","y","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tommymarkopoulos/Desktop/coding/Git_Repos/chess-app/src/components/WinsByBlackDonut.js"],"sourcesContent":["import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\n\n\nfunction WinsByBlackDonut({cumulativeData}) {\n    ChartJS.register(ArcElement, Tooltip, Legend);\n\n    const getFilteredData = () => {\n      let wins = 0;\n      let losses = 0;\n      let draws = 0;\n\n      Object.keys(cumulativeData.games_by_time).forEach((key)=>{\n        wins += cumulativeData.games_by_time[key].win;\n        losses += cumulativeData.games_by_time[key].loss;\n        draws += cumulativeData.games_by_time[key].draw;\n    });\n      return [wins,losses,draws];\n\n    }\n\n    const options = {\n      plugins: {\n        title: {\n          display: true,\n          text: 'Win Percentage',\n          font: {\n            size: 20\n          }\n        },\n        legend: {\n          position: 'right',\n          // display: false\n        }\n      }\n    }\n    \n    const labels = Object.keys(cumulativeData.games_by_time.morning)\n    let data = {\n        labels,\n        datasets: [\n          {\n            label: 'frequency',\n            data: getFilteredData(),\n            backgroundColor: [\n                'rgb(75, 192, 192)',\n                'rgb(255, 99, 132)',\n                'rgb(53, 162, 235)'\n            ],\n            borderColor: [\n                'rgb(75, 192, 192)',\n                'rgb(255, 99, 132)',\n                'rgb(53, 162, 235)'\n            ],\n            borderWidth: 1,\n          },\n        ],\n      };\n\n      const winPercent = (data) => {\n        const wins = data.datasets[0].data[0]\n        const losses = data.datasets[0].data[1]\n        const draws = data.datasets[0].data[2]\n        return Math.round(100*wins/(wins+losses+draws))\n  \n      }\n  \n      const textCenter = {\n        id : \"textCenter\",\n        beforeDatasetsDraw(chart, args, pluginOptions){\n          const { ctx, data} = chart;\n  \n          ctx.save();\n          ctx.font = 'bolder 15px sans-serif';\n          ctx.fillStyle = 'green';\n          ctx.textAlign = 'center';\n          ctx.textBaseline = 'middle';\n          ctx.fillText((`${winPercent(data)}%`), \n            chart.getDatasetMeta(0).data[0].x, chart.getDatasetMeta(0).data[0].y);\n        }\n  \n      }\n\n  return (\n    <div>\n        <Doughnut options={options} data={data} plugins={[textCenter]} />\n    </div>\n  )\n}\n\nexport default WinsByBlackDonut;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}