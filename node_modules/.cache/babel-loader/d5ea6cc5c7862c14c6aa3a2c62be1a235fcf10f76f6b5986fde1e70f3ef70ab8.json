{"ast":null,"code":"var _jsxFileName = \"/Users/tommymarkopoulos/Desktop/coding/Git_Repos/chess-app/src/components/WinsByWhiteDonut.js\";\nimport React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WinsByWhiteDonut(_ref) {\n  let {\n    cumulativeData\n  } = _ref;\n  ChartJS.register(ArcElement, Tooltip, Legend);\n  const options = {\n    plugins: {\n      title: {\n        text: 'Games as White'\n      }\n    }\n  };\n  const labels = Object.keys(cumulativeData.games_by_color.white);\n  let data = {\n    labels,\n    datasets: [{\n      label: 'White',\n      data: Object.values(cumulativeData.games_by_color.white),\n      backgroundColor: ['rgb(75, 192, 192)', 'rgb(255, 99, 132)', 'rgb(53, 162, 235)'],\n      borderColor: ['rgb(75, 192, 192)', 'rgb(255, 99, 132)', 'rgb(53, 162, 235)'],\n      borderWidth: 1\n    }]\n  };\n  const textCenter = {\n    id: \"textCenter\",\n    beforeDatasetsDraw(chart, args, pluginOptions) {\n      const {\n        ctx,\n        data\n      } = chart;\n      ctx.save();\n      ctx.font = 'bolder 15px sans-serif';\n      ctx.fillStyle = 'red';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(\"White\", chart.getDatasetMeta(0).data[0].x, chart.getDatasetMeta(0).data[0].y);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Doughnut, {\n      options: options,\n      data: data,\n      plugins: [textCenter]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_c = WinsByWhiteDonut;\nexport default WinsByWhiteDonut;\nvar _c;\n$RefreshReg$(_c, \"WinsByWhiteDonut\");","map":{"version":3,"names":["React","Chart","ChartJS","ArcElement","Tooltip","Legend","Doughnut","jsxDEV","_jsxDEV","WinsByWhiteDonut","_ref","cumulativeData","register","options","plugins","title","text","labels","Object","keys","games_by_color","white","data","datasets","label","values","backgroundColor","borderColor","borderWidth","textCenter","id","beforeDatasetsDraw","chart","args","pluginOptions","ctx","save","font","fillStyle","textAlign","textBaseline","fillText","getDatasetMeta","x","y","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tommymarkopoulos/Desktop/coding/Git_Repos/chess-app/src/components/WinsByWhiteDonut.js"],"sourcesContent":["import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\n\n\nfunction WinsByWhiteDonut({cumulativeData}) {\n    ChartJS.register(ArcElement, Tooltip, Legend);\n\n\n    const options = {\n      plugins: {\n        title: {\n          text: 'Games as White'\n        }\n      }\n    }\n\n    const labels = Object.keys(cumulativeData.games_by_color.white)\n    let data = {\n        labels,\n        datasets: [\n          {\n            label: 'White',\n            data: Object.values(cumulativeData.games_by_color.white),\n            backgroundColor: [\n                'rgb(75, 192, 192)',\n                'rgb(255, 99, 132)',\n                'rgb(53, 162, 235)'\n            ],\n            borderColor: [\n                'rgb(75, 192, 192)',\n                'rgb(255, 99, 132)',\n                'rgb(53, 162, 235)'\n            ],\n            borderWidth: 1,\n          },\n        ],\n      };\n    \n\n    const textCenter = {\n      id : \"textCenter\",\n      beforeDatasetsDraw(chart, args, pluginOptions){\n        const { ctx, data} = chart;\n\n        ctx.save();\n        ctx.font = 'bolder 15px sans-serif';\n        ctx.fillStyle = 'red';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText((\"White\"), chart.getDatasetMeta(0).data[0].x, chart.getDatasetMeta(0).data[0].y);\n      }\n\n    }\n\n\n  return (\n    <div>\n        <Doughnut options={options} data={data} plugins={[textCenter]} />\n    </div>\n  )\n}\n\nexport default WinsByWhiteDonut;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,IAAIC,OAAO,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AACxE,SAASC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3C,SAASC,gBAAgBA,CAAAC,IAAA,EAAmB;EAAA,IAAlB;IAACC;EAAc,CAAC,GAAAD,IAAA;EACtCR,OAAO,CAACU,QAAQ,CAACT,UAAU,EAAEC,OAAO,EAAEC,MAAM,CAAC;EAG7C,MAAMQ,OAAO,GAAG;IACdC,OAAO,EAAE;MACPC,KAAK,EAAE;QACLC,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAED,MAAMC,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACR,cAAc,CAACS,cAAc,CAACC,KAAK,CAAC;EAC/D,IAAIC,IAAI,GAAG;IACPL,MAAM;IACNM,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,OAAO;MACdF,IAAI,EAAEJ,MAAM,CAACO,MAAM,CAACd,cAAc,CAACS,cAAc,CAACC,KAAK,CAAC;MACxDK,eAAe,EAAE,CACb,mBAAmB,EACnB,mBAAmB,EACnB,mBAAmB,CACtB;MACDC,WAAW,EAAE,CACT,mBAAmB,EACnB,mBAAmB,EACnB,mBAAmB,CACtB;MACDC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAGH,MAAMC,UAAU,GAAG;IACjBC,EAAE,EAAG,YAAY;IACjBC,kBAAkBA,CAACC,KAAK,EAAEC,IAAI,EAAEC,aAAa,EAAC;MAC5C,MAAM;QAAEC,GAAG;QAAEb;MAAI,CAAC,GAAGU,KAAK;MAE1BG,GAAG,CAACC,IAAI,CAAC,CAAC;MACVD,GAAG,CAACE,IAAI,GAAG,wBAAwB;MACnCF,GAAG,CAACG,SAAS,GAAG,KAAK;MACrBH,GAAG,CAACI,SAAS,GAAG,QAAQ;MACxBJ,GAAG,CAACK,YAAY,GAAG,QAAQ;MAC3BL,GAAG,CAACM,QAAQ,CAAE,OAAO,EAAGT,KAAK,CAACU,cAAc,CAAC,CAAC,CAAC,CAACpB,IAAI,CAAC,CAAC,CAAC,CAACqB,CAAC,EAAEX,KAAK,CAACU,cAAc,CAAC,CAAC,CAAC,CAACpB,IAAI,CAAC,CAAC,CAAC,CAACsB,CAAC,CAAC;IAC/F;EAEF,CAAC;EAGH,oBACEpC,OAAA;IAAAqC,QAAA,eACIrC,OAAA,CAACF,QAAQ;MAACO,OAAO,EAAEA,OAAQ;MAACS,IAAI,EAAEA,IAAK;MAACR,OAAO,EAAE,CAACe,UAAU;IAAE;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEV;AAACC,EAAA,GAxDQzC,gBAAgB;AA0DzB,eAAeA,gBAAgB;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}