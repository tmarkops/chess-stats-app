{"ast":null,"code":"var _jsxFileName = \"/Users/tommymarkopoulos/Desktop/coding/Git_Repos/chess-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from \"react\";\nimport SearchBar from './components/SearchBar';\nimport WinsByTimeGraph from './components/WinsByTimeGraph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [form, setForm] = useState({\n    username: \"\",\n    fromDate: \"\",\n    toDate: \"\"\n  });\n  const [chessgames, setChessGames] = useState([]);\n  const handleChange = e => {\n    let name = e.target.name;\n    let value = e.target.value;\n    if (name === 'username') {\n      setForm({\n        ...form,\n        username: value\n      });\n    }\n    if (name === 'fromDate') {\n      let date = new Date(value);\n      date.setTime(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\n      setForm({\n        ...form,\n        fromDate: date\n      });\n    }\n    if (name === 'toDate') {\n      let date = new Date(value);\n      date.setTime(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\n      setForm({\n        ...form,\n        toDate: date\n      });\n    }\n  };\n\n  // function that takes date (month-year) as input and returns chess data\n\n  async function getChessData(month, year) {\n    if (month == 12) {\n      month = 1;\n      month = month.toString().padStart(2, '0');\n    } else if (month >= 9 && month < 12) {\n      month++;\n    } else {\n      month++;\n      month = month.toString().padStart(2, '0');\n    }\n    const response = await fetch(`https://api.chess.com/pub/player/${form.username}/games/${year}/${month}`);\n    const data = await response.json();\n    return data;\n  }\n\n  // takes form data as input, and returns all chess data in range (calls getChessData function) \n  async function collectAllData(e) {\n    e.preventDefault();\n    if (form.username === \"\") {\n      alert(\"Please enter a username.\");\n    } else if (form.fromDate === \"\" || form.toDate === \"\") {\n      alert(\"Please enter a valid date range.\");\n    } else {\n      let begDate = new Date(form.fromDate);\n      let endDate = new Date(form.toDate);\n      let allData = [];\n      const today = new Date();\n      while (begDate <= endDate && begDate <= today) {\n        let curData = await getChessData(begDate.getMonth(), begDate.getFullYear());\n        curData['games'].map(game => {\n          let cleanGame = cleanData(game);\n          allData.push(cleanGame);\n        });\n        begDate.setMonth(begDate.getMonth() + 1);\n      }\n      setChessGames(allData);\n      console.log(chessgames);\n    }\n  }\n\n  // take raw game data as input and return clean data in js object\n  // can add opening by parsing game PNG \n  const cleanData = rawGame => {\n    const draws = [\"timevsinsufficient\", \"stalemate\", \"repetition\", \"agreed\", \"insufficient\", \"50move\"];\n    const losses = [\"checkmated\", \"timeout\", \"resigned\", \"lose\", \"abandoned\"];\n    const cleanGame = {\n      time: rawGame.end_time,\n      opponent: \"\",\n      opponent_rating: \"\",\n      opponent_profile: \"\",\n      result: \"\",\n      url: rawGame.url,\n      game_type: rawGame.time_class,\n      color: \"\",\n      rating: \"\"\n    };\n    if (rawGame.white.username === form.username) {\n      cleanGame.color = \"white\";\n      cleanGame.rating = rawGame.white.rating;\n      cleanGame.opponent = rawGame.black.username;\n      cleanGame.opponent_rating = rawGame.black.rating;\n      cleanGame.opponent_profile = rawGame.black[\"@id\"];\n      if (rawGame.white.result === \"win\") {\n        cleanGame.result = \"win\";\n      } else if (draws.includes(rawGame.white.result)) {\n        cleanGame.result = \"draw\";\n      } else if (losses.includes(rawGame.white.result)) {\n        cleanGame.result = \"loss\";\n      }\n    } else {\n      cleanGame.color = \"black\";\n      cleanGame.rating = rawGame.black.rating;\n      cleanGame.opponent = rawGame.white.username;\n      cleanGame.opponent_rating = rawGame.white.rating;\n      cleanGame.opponent_profile = rawGame.white[\"@id\"];\n      if (rawGame.black.result === \"win\") {\n        cleanGame.result = \"win\";\n      } else if (draws.includes(rawGame.black.result)) {\n        cleanGame.result = \"draw\";\n      } else if (losses.includes(rawGame.black.result)) {\n        cleanGame.result = \"loss\";\n      }\n    }\n    return cleanGame;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tommy's Cool Chess App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(SearchBar, {\n          handleChange: handleChange,\n          collectAllData: collectAllData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(WinsByTimeGraph, {\n          chessgames: chessgames\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"uBfmxG7Zqh849OKPegLi0sMZAxg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SearchBar","WinsByTimeGraph","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","form","setForm","username","fromDate","toDate","chessgames","setChessGames","handleChange","e","name","target","value","date","Date","setTime","getTime","getTimezoneOffset","getChessData","month","year","toString","padStart","response","fetch","data","json","collectAllData","preventDefault","alert","begDate","endDate","allData","today","curData","getMonth","getFullYear","map","game","cleanGame","cleanData","push","setMonth","console","log","rawGame","draws","losses","time","end_time","opponent","opponent_rating","opponent_profile","result","url","game_type","time_class","color","rating","white","black","includes","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tommymarkopoulos/Desktop/coding/Git_Repos/chess-app/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from \"react\";\nimport SearchBar from './components/SearchBar';\nimport WinsByTimeGraph from './components/WinsByTimeGraph';\n\nfunction App() {\n\n  const [form, setForm] = useState({\n    username: \"\",\n    fromDate: \"\",\n    toDate: \"\"\n  })\n\n  const [chessgames, setChessGames] = useState([])\n\n  const handleChange = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n\n    if (name === 'username') {\n        setForm({...form, username: value})\n      }\n    if (name === 'fromDate') {\n      let date = new Date(value);\n      date.setTime(date.getTime()+date.getTimezoneOffset()*60*1000);\n\n      setForm({...form, fromDate: date});\n    }\n    if (name === 'toDate') {\n      let date = new Date(value)\n      date.setTime(date.getTime()+date.getTimezoneOffset()*60*1000);\n\n      setForm({...form, toDate: date});\n    }\n  }\n\n\n  // function that takes date (month-year) as input and returns chess data\n\n  async function getChessData(month, year){\n    if (month == 12){\n      month = 1;\n      month = month.toString().padStart(2, '0');\n    } else if(month >= 9 && month<12){\n      month++;\n    }else{\n      month++;\n      month = month.toString().padStart(2, '0')\n    }\n  \n    const response = await fetch(`https://api.chess.com/pub/player/${form.username}/games/${year}/${month}`);\n    const data = await response.json();\n    return data;\n  }\n\n  // takes form data as input, and returns all chess data in range (calls getChessData function) \n  async function collectAllData(e){\n    e.preventDefault();\n    \n    if(form.username === \"\"){\n      alert(\"Please enter a username.\");\n    } else if(form.fromDate === \"\" || form.toDate === \"\"){\n      alert(\"Please enter a valid date range.\");\n    }else{\n      let begDate = new Date(form.fromDate);\n      let endDate = new Date(form.toDate);\n      let allData = [];\n      const today = new Date();\n\n      while ((begDate<=endDate) && begDate<= today){\n        let curData = await getChessData(begDate.getMonth(), begDate.getFullYear());\n        curData['games'].map((game)=>{\n          let cleanGame = cleanData(game);\n          allData.push(cleanGame);\n        });\n        begDate.setMonth(begDate.getMonth()+1);\n      }\n      setChessGames(allData);\n      console.log(chessgames);\n    }\n    }\n\n  // take raw game data as input and return clean data in js object\n  // can add opening by parsing game PNG \n  const cleanData = (rawGame) => {\n    const draws = [\"timevsinsufficient\", \"stalemate\", \"repetition\", \"agreed\", \"insufficient\", \"50move\"];\n    const losses = [\"checkmated\", \"timeout\", \"resigned\", \"lose\", \"abandoned\"];\n    const cleanGame = {\n      time: rawGame.end_time,\n      opponent: \"\",\n      opponent_rating: \"\",\n      opponent_profile: \"\",\n      result: \"\",\n      url: rawGame.url,\n      game_type: rawGame.time_class,\n      color: \"\",\n      rating: \"\"\n    };\n    if(rawGame.white.username === form.username){\n      cleanGame.color = \"white\";\n      cleanGame.rating = rawGame.white.rating;\n\n      cleanGame.opponent = rawGame.black.username;\n      cleanGame.opponent_rating = rawGame.black.rating;\n      cleanGame.opponent_profile = rawGame.black[\"@id\"];\n\n\n      if (rawGame.white.result === \"win\"){\n        cleanGame.result = \"win\";\n      }else if(draws.includes(rawGame.white.result)){\n        cleanGame.result = \"draw\"\n      }else if(losses.includes(rawGame.white.result)){\n        cleanGame.result = \"loss\"\n      }\n    } else{\n      cleanGame.color = \"black\";\n      cleanGame.rating = rawGame.black.rating;\n\n      cleanGame.opponent = rawGame.white.username;\n      cleanGame.opponent_rating = rawGame.white.rating;\n      cleanGame.opponent_profile = rawGame.white[\"@id\"];\n\n      if (rawGame.black.result === \"win\"){\n        cleanGame.result = \"win\";\n      }else if(draws.includes(rawGame.black.result)){\n        cleanGame.result = \"draw\"\n      }else if(losses.includes(rawGame.black.result)){\n        cleanGame.result = \"loss\"\n      }\n    }\n\n    return cleanGame;\n    \n  }\n\n  return (\n    <>\n    <div className=\"App\">\n      <h1>Tommy's Cool Chess App</h1>\n      <div>\n        <SearchBar handleChange={handleChange} collectAllData={collectAllData}/>\n      </div>\n      <div>\n        <WinsByTimeGraph chessgames={chessgames} />\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}