{"ast":null,"code":"import React from'react';import{Chart as ChartJS,ArcElement,Tooltip,Legend}from'chart.js';import{Doughnut}from'react-chartjs-2';import{jsx as _jsx}from\"react/jsx-runtime\";function WinsByBlackDonut(_ref){var cumulativeData=_ref.cumulativeData;ChartJS.register(ArcElement,Tooltip,Legend);// set default chart color to black\nChartJS.defaults.color='#000';var getFilteredData=function getFilteredData(){var wins=0;var losses=0;var draws=0;Object.keys(cumulativeData.games_by_time).forEach(function(key){wins+=cumulativeData.games_by_time[key].win;losses+=cumulativeData.games_by_time[key].loss;draws+=cumulativeData.games_by_time[key].draw;});return[wins,losses,draws];};var labels=Object.keys(cumulativeData.games_by_time.morning);var data={labels:labels,datasets:[{label:'frequency',data:getFilteredData(),backgroundColor:['rgba(127,166,80,255)','#a650a1','#507fa6'],borderColor:['rgba(127,166,80,255)','#a650a1','#507fa6'],borderWidth:1}]};var winPercent=function winPercent(data){var wins=data.datasets[0].data[0];var losses=data.datasets[0].data[1];var draws=data.datasets[0].data[2];return Math.round(100*wins/(wins+losses+draws));};var options={cutout:'70%',plugins:{title:{display:true,maintainAspectRatio:true,text:'Win Percentage',font:function font(context){var width=context.chart.width;var size=Math.round(width/9);return{weight:'bold',size:size};}},legend:{position:'right',maintainAspectRatio:true,display:winPercent(data)?true:false,labels:{font:function font(context){var width=context.chart.width;var size=Math.round(width/18);return{weight:'bold',size:size};},boxWidth:function boxWidth(context){var width=context.chart.width;var size=Math.round(width/12);return size;}}}}};var textCenter={id:\"textCenter\",beforeDatasetsDraw:function beforeDatasetsDraw(chart,args,pluginOptions){var ctx=chart.ctx,data=chart.data;var fontSize=(chart.height/150).toFixed(2);ctx.save();ctx.font=\"bolder \".concat(fontSize,\"em sans-serif\");ctx.fillStyle='green';ctx.textAlign='center';ctx.textBaseline='middle';ctx.fillText(winPercent(data)?\"\".concat(winPercent(data),\"%\"):\"No games played\",chart.getDatasetMeta(0).data[0].x,chart.getDatasetMeta(0).data[0].y);}};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Doughnut,{options:options,data:data,plugins:[textCenter]})});}export default WinsByBlackDonut;","map":{"version":3,"names":["React","Chart","ChartJS","ArcElement","Tooltip","Legend","Doughnut","jsx","_jsx","WinsByBlackDonut","_ref","cumulativeData","register","defaults","color","getFilteredData","wins","losses","draws","Object","keys","games_by_time","forEach","key","win","loss","draw","labels","morning","data","datasets","label","backgroundColor","borderColor","borderWidth","winPercent","Math","round","options","cutout","plugins","title","display","maintainAspectRatio","text","font","context","width","chart","size","weight","legend","position","boxWidth","textCenter","id","beforeDatasetsDraw","args","pluginOptions","ctx","fontSize","height","toFixed","save","concat","fillStyle","textAlign","textBaseline","fillText","getDatasetMeta","x","y","children"],"sources":["/Users/tommymarkopoulos/Desktop/coding/Git_Repos/chess-app/chess-stats-app/src/components/WinPercentageDisplay.js"],"sourcesContent":["import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\n\n\nfunction WinsByBlackDonut({cumulativeData}) {\n    ChartJS.register(ArcElement, Tooltip, Legend);\n\n    // set default chart color to black\n    ChartJS.defaults.color = '#000'\n\n    const getFilteredData = () => {\n      let wins = 0;\n      let losses = 0;\n      let draws = 0;\n\n      Object.keys(cumulativeData.games_by_time).forEach((key)=>{\n        wins += cumulativeData.games_by_time[key].win;\n        losses += cumulativeData.games_by_time[key].loss;\n        draws += cumulativeData.games_by_time[key].draw;\n    });\n      return [wins,losses,draws];\n\n    }\n    \n    const labels = Object.keys(cumulativeData.games_by_time.morning)\n    let data = {\n        labels,\n        datasets: [\n          {\n            label: 'frequency',\n            data: getFilteredData(),\n            backgroundColor: [\n                'rgba(127,166,80,255)',\n                '#a650a1',\n                '#507fa6'\n            ],\n            borderColor: [\n                'rgba(127,166,80,255)',\n                '#a650a1',\n                '#507fa6'\n            ],\n            borderWidth: 1,\n          },\n        ],\n      };\n\n      const winPercent = (data) => {\n        const wins = data.datasets[0].data[0]\n        const losses = data.datasets[0].data[1]\n        const draws = data.datasets[0].data[2]\n        return Math.round(100*wins/(wins+losses+draws))\n  \n      }\n  \n      const options = {\n        cutout: '70%',\n        plugins: {\n          title: {\n            display: true,\n            maintainAspectRatio: true,\n            text: 'Win Percentage',\n            font: function (context){\n                  let width = context.chart.width;\n                  let size = Math.round(width/9);\n                  return {\n                      weight: 'bold',\n                      size: size\n                  };\n                }\n          },\n          legend: {\n            position: 'right',\n            maintainAspectRatio: true,\n            display: ((winPercent(data))? true : false),\n            labels: {\n              font: function (context){\n                let width = context.chart.width;\n                let size = Math.round(width/18);\n                return {\n                    weight: 'bold',\n                    size: size\n                };\n              },\n              boxWidth: function (context){\n                let width = context.chart.width;\n                let size = Math.round(width/12);\n                return size;\n              },\n            }\n          }\n        }\n      }\n\n      const textCenter = {\n        id : \"textCenter\",\n        beforeDatasetsDraw(chart, args, pluginOptions){\n          const { ctx, data} = chart;\n          let fontSize = (chart.height/150).toFixed(2);\n          ctx.save();\n          ctx.font = `bolder ${fontSize}em sans-serif`;\n          ctx.fillStyle = 'green';\n          ctx.textAlign = 'center';\n          ctx.textBaseline = 'middle';\n          ctx.fillText(\n            ((winPercent(data)) ? (`${winPercent(data)}%`): \"No games played\"), \n            chart.getDatasetMeta(0).data[0].x, chart.getDatasetMeta(0).data[0].y);\n        }\n  \n      }\n\n  return (\n    <div>\n        <Doughnut options={options} data={data} plugins={[textCenter]} />\n    </div>\n  )\n}\n\nexport default WinsByBlackDonut;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}