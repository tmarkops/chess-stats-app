{"ast":null,"code":"var _jsxFileName = \"/Users/tommymarkopoulos/Desktop/coding/Git_Repos/chess-app/src/components/WinsByTimeGraph.js\";\nimport React from 'react';\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WinsByTimeGraph(_ref) {\n  let {\n    chessgames,\n    cumulativeData\n  } = _ref;\n  ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n  const options = {\n    plugins: {\n      title: {\n        display: true,\n        text: 'Result vs Time of Day',\n        font: {\n          size: 35\n        }\n      },\n      legend: {\n        position: 'right'\n      }\n    },\n    responsive: true,\n    interaction: {\n      mode: 'index',\n      intersect: false\n    },\n    scales: {\n      x: {\n        stacked: true\n      },\n      y: {\n        stacked: true,\n        title: {\n          display: true,\n          text: 'Number of Games',\n          padding: 10,\n          font: {\n            size: 15\n          }\n        }\n      }\n    }\n  };\n  const getStats = (result, obj) => {\n    let arr = [];\n    let keys = Object.keys(obj);\n    keys.forEach(key => {\n      arr.push(obj[key][result]);\n    });\n    return arr;\n  };\n  const labels = Object.keys(cumulativeData.games_by_time);\n  const data = {\n    labels,\n    datasets: [{\n      label: 'Win',\n      data: getStats('win', cumulativeData.games_by_time),\n      backgroundColor: 'rgba(127,166,80,255)',\n      stack: 'Stack 0'\n    }, {\n      label: 'Loss',\n      data: getStats('loss', cumulativeData.games_by_time),\n      backgroundColor: '#a650a1',\n      stack: 'Stack 1'\n    }, {\n      label: 'Draw',\n      data: getStats('draw', cumulativeData.games_by_time),\n      backgroundColor: '#50a688',\n      stack: 'Stack 2'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_c = WinsByTimeGraph;\nexport default WinsByTimeGraph;\nvar _c;\n$RefreshReg$(_c, \"WinsByTimeGraph\");","map":{"version":3,"names":["React","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","WinsByTimeGraph","_ref","chessgames","cumulativeData","register","options","plugins","title","display","text","font","size","legend","position","responsive","interaction","mode","intersect","scales","x","stacked","y","padding","getStats","result","obj","arr","keys","Object","forEach","key","push","labels","games_by_time","data","datasets","label","backgroundColor","stack","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tommymarkopoulos/Desktop/coding/Git_Repos/chess-app/src/components/WinsByTimeGraph.js"],"sourcesContent":["import React from 'react';\nimport { Bar } from \"react-chartjs-2\";\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n  } from 'chart.js';\n\n\n\nfunction WinsByTimeGraph({ chessgames, cumulativeData}) {\n    ChartJS.register(\n        CategoryScale,\n        LinearScale,\n        BarElement,\n        Title,\n        Tooltip,\n        Legend\n      );\n    \n    \n    const options = {\n        plugins: {\n        title: {\n            display: true,\n            text: 'Result vs Time of Day',\n            font: {\n              size: 35\n            }\n        },\n        legend:{\n          position: 'right'\n        }\n        },\n        responsive: true,\n        interaction: {\n        mode: 'index',\n        intersect: false\n        },\n        scales: {\n        x: {\n          stacked: true,\n        },\n        y: {\n          stacked: true,\n          title: {\n            display: true,\n            text: 'Number of Games',\n            padding: 10,\n            font: {\n              size: 15\n            }\n          }\n        },\n        },\n    };\n\n    const getStats = (result, obj) => {\n        let arr = [];\n        let keys = Object.keys(obj);\n        keys.forEach((key)=>{\n            arr.push(obj[key][result]);\n        })\n        return arr;\n    }\n\n    const labels = Object.keys(cumulativeData.games_by_time);\n\n    const data = {\n        labels,\n        datasets: [\n          {\n            label: 'Win',\n            data: getStats('win',cumulativeData.games_by_time),\n            backgroundColor: 'rgba(127,166,80,255)',\n            stack: 'Stack 0',\n          },\n          {\n            label: 'Loss',\n            data: getStats('loss',cumulativeData.games_by_time),\n            backgroundColor: '#a650a1',\n            stack: 'Stack 1',\n          },\n          {\n            label: 'Draw',\n            data: getStats('draw',cumulativeData.games_by_time),\n            backgroundColor: '#50a688',\n            stack: 'Stack 2',\n          },\n        ],\n      };\n    return (\n    <div><Bar options={options} data={data} /></div>\n    )\n}\n\nexport default WinsByTimeGraph;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}