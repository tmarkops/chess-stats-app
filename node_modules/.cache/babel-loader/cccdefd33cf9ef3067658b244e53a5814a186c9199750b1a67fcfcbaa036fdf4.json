{"ast":null,"code":"var _jsxFileName = \"/Users/tommymarkopoulos/Desktop/coding/Git_Repos/chess-app/src/components/WinsByColorGraph.js\";\nimport React from 'react';\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WinsByColorGraph(_ref) {\n  let {\n    chessgames,\n    cumulativeData\n  } = _ref;\n  ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n  const options = {\n    plugins: {\n      title: {\n        display: true,\n        text: 'Chart.js Bar Chart - Stacked'\n      }\n    },\n    responsive: true,\n    interaction: {\n      mode: 'index',\n      intersect: false\n    },\n    scales: {\n      x: {\n        stacked: true\n      },\n      y: {\n        stacked: true\n      }\n    }\n  };\n  const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n  const times = Object.keys(cumulativeData.games_by_time);\n  const data = {\n    times,\n    datasets: [{\n      label: 'Win',\n      data: [10, 20, 30, 40, 50, 60, 70],\n      backgroundColor: 'rgb(75, 192, 192)',\n      stack: 'Stack 0'\n    }, {\n      label: 'Loss',\n      data: [10, 55, 60, 14, 29, 70, 90],\n      backgroundColor: 'rgb(255, 99, 132)',\n      stack: 'Stack 1'\n    }, {\n      label: 'Draw',\n      data: [3, 90, 80, 30, 50, 70, 65],\n      backgroundColor: 'rgb(53, 162, 235)',\n      stack: 'Stack 2'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_c = WinsByColorGraph;\nexport default WinsByColorGraph;\nvar _c;\n$RefreshReg$(_c, \"WinsByColorGraph\");","map":{"version":3,"names":["React","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","WinsByColorGraph","_ref","chessgames","cumulativeData","register","options","plugins","title","display","text","responsive","interaction","mode","intersect","scales","x","stacked","y","labels","times","Object","keys","games_by_time","data","datasets","label","backgroundColor","stack","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tommymarkopoulos/Desktop/coding/Git_Repos/chess-app/src/components/WinsByColorGraph.js"],"sourcesContent":["import React from 'react';\nimport { Bar } from \"react-chartjs-2\";\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n  } from 'chart.js';\n\n\n\nfunction WinsByColorGraph({ chessgames, cumulativeData }) {\n    ChartJS.register(\n        CategoryScale,\n        LinearScale,\n        BarElement,\n        Title,\n        Tooltip,\n        Legend\n      );\n    \n    \n    const options = {\n        plugins: {\n        title: {\n            display: true,\n            text: 'Chart.js Bar Chart - Stacked',\n        },\n        },\n        responsive: true,\n        interaction: {\n        mode: 'index',\n        intersect: false\n        },\n        scales: {\n        x: {\n            stacked: true,\n        },\n        y: {\n            stacked: true,\n        },\n        },\n    };\n    const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n    const times = Object.keys(cumulativeData.games_by_time);\n\n    const data = {\n        times,\n        datasets: [\n          {\n            label: 'Win',\n            data: [10,20,30,40,50,60,70],\n            backgroundColor: 'rgb(75, 192, 192)',\n            stack: 'Stack 0',\n          },\n          {\n            label: 'Loss',\n            data: [10,55,60,14,29,70,90],\n            backgroundColor: 'rgb(255, 99, 132)',\n            stack: 'Stack 1',\n          },\n          {\n            label: 'Draw',\n            data: [3,90,80,30,50,70,65],\n            backgroundColor: 'rgb(53, 162, 235)',\n            stack: 'Stack 2',\n          },\n        ],\n      };\n\n    return (\n    <div><Bar options={options} data={data} /></div>\n    )\n}\n\nexport default WinsByColorGraph;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SACIC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIpB,SAASC,gBAAgBA,CAAAC,IAAA,EAAiC;EAAA,IAAhC;IAAEC,UAAU;IAAEC;EAAe,CAAC,GAAAF,IAAA;EACpDV,OAAO,CAACa,QAAQ,CACZZ,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;EAGH,MAAMQ,OAAO,GAAG;IACZC,OAAO,EAAE;MACTC,KAAK,EAAE;QACHC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACV;IACA,CAAC;IACDC,UAAU,EAAE,IAAI;IAChBC,WAAW,EAAE;MACbC,IAAI,EAAE,OAAO;MACbC,SAAS,EAAE;IACX,CAAC;IACDC,MAAM,EAAE;MACRC,CAAC,EAAE;QACCC,OAAO,EAAE;MACb,CAAC;MACDC,CAAC,EAAE;QACCD,OAAO,EAAE;MACb;IACA;EACJ,CAAC;EACD,MAAME,MAAM,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC;EAC/E,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAI,CAAClB,cAAc,CAACmB,aAAa,CAAC;EAEvD,MAAMC,IAAI,GAAG;IACTJ,KAAK;IACLK,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,KAAK;MACZF,IAAI,EAAE,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC;MAC5BG,eAAe,EAAE,mBAAmB;MACpCC,KAAK,EAAE;IACT,CAAC,EACD;MACEF,KAAK,EAAE,MAAM;MACbF,IAAI,EAAE,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC;MAC5BG,eAAe,EAAE,mBAAmB;MACpCC,KAAK,EAAE;IACT,CAAC,EACD;MACEF,KAAK,EAAE,MAAM;MACbF,IAAI,EAAE,CAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC;MAC3BG,eAAe,EAAE,mBAAmB;MACpCC,KAAK,EAAE;IACT,CAAC;EAEL,CAAC;EAEH,oBACA5B,OAAA;IAAA6B,QAAA,eAAK7B,OAAA,CAACV,GAAG;MAACgB,OAAO,EAAEA,OAAQ;MAACkB,IAAI,EAAEA;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEpD;AAACC,EAAA,GA9DQjC,gBAAgB;AAgEzB,eAAeA,gBAAgB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}