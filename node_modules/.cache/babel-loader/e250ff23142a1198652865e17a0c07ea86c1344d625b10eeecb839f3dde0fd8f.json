{"ast":null,"code":"var _jsxFileName = \"/Users/tommymarkopoulos/Desktop/coding/Git_Repos/chess-app/src/components/SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchBar() {\n  _s();\n  const [form, setForm] = useState({\n    username: \"\",\n    fromMonth: 0,\n    fromYear: 0,\n    toMonth: 0,\n    toYear: 0\n  });\n  const [chessgames, setChessGames] = useState([]);\n  const handleChange = e => {\n    let name = e.target.name;\n    let value = e.target.value;\n    if (name === 'username') {\n      setForm({\n        ...form,\n        username: value\n      });\n    }\n    if (name === 'fromDate') {\n      let month = value.slice(-2);\n      let year = value.slice(0, 4);\n      parseInt(month);\n      parseInt(year);\n      setForm({\n        ...form,\n        fromMonth: month,\n        fromYear: year\n      });\n    }\n    if (name === 'toDate') {\n      let month = value.slice(-2);\n      let year = value.slice(0, 4);\n      parseInt(month);\n      parseInt(year);\n      setForm({\n        ...form,\n        toMonth: month,\n        toYear: year\n      });\n    }\n  };\n\n  // function that takes date (month-year) as input and returns chess data\n\n  async function getChessData(month, year) {\n    let monthPadded = month.toString().padStart(2, '0');\n    const response = await fetch(`https://api.chess.com/pub/player/${form.username}/games/${year}/${monthPadded}`);\n    const data = await response.json();\n    return data;\n  }\n\n  // takes form data as input, and returns all chess data in range (calls getChessData function) \n  async function collectAllData(e) {\n    e.preventDefault();\n    if (form.username === \"\") {\n      alert(\"Please enter a username.\");\n    } else if (form.fromYear === 0 || form.toYear === 0) {\n      alert(\"Please enter a valid date range.\");\n    } else {\n      let fromMonth = form.fromMonth;\n      let fromYear = form.fromYear;\n      let toMonth = form.toMonth;\n      let toYear = form.toYear;\n      let allData = [];\n      while (fromMonth !== toMonth || fromYear !== toYear) {\n        let curData = await getChessData(fromMonth, fromYear);\n        curData['games'].map(game => {\n          allData.push(game);\n        });\n        console.log(fromMonth, toMonth);\n        fromMonth++;\n      }\n      setChessGames({\n        data: allData\n      });\n      // console.log(allData);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchbar\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Chess.com username: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"username\",\n        type: \"search\",\n        placeholder: \"Enter username\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), \"\\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"From: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"fromDate\",\n        type: \"month\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), \"\\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"To: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"toDate\",\n        type: \"month\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: e => collectAllData(e),\n        children: \"GetData\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchBar, \"14HdCI5/k53QcdFmvqCHbzKW31c=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SearchBar","_s","form","setForm","username","fromMonth","fromYear","toMonth","toYear","chessgames","setChessGames","handleChange","e","name","target","value","month","slice","year","parseInt","getChessData","monthPadded","toString","padStart","response","fetch","data","json","collectAllData","preventDefault","alert","allData","curData","map","game","push","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/tommymarkopoulos/Desktop/coding/Git_Repos/chess-app/src/components/SearchBar.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction SearchBar() {\n\n  const [form, setForm] = useState({\n    username: \"\",\n    fromMonth: 0,\n    fromYear: 0,\n    toMonth: 0,\n    toYear: 0\n  })\n\n  const [chessgames, setChessGames] = useState([])\n\n  const handleChange = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n\n    if (name === 'username') {\n        setForm({...form, username: value})\n      }\n    if (name === 'fromDate') {\n      let month = (value.slice(-2));\n      let year = (value.slice(0,4));\n      parseInt(month);\n      parseInt(year);\n      setForm({...form, fromMonth: month, fromYear: year});\n    }\n    if (name === 'toDate') {\n      let month = (value.slice(-2));\n      let year = (value.slice(0,4));\n      parseInt(month);\n      parseInt(year);\n      setForm({...form, toMonth: month, toYear: year});\n    }\n  }\n\n\n  // function that takes date (month-year) as input and returns chess data\n\n  async function getChessData(month, year){\n    let monthPadded = month.toString().padStart(2,'0')\n    const response = await fetch(`https://api.chess.com/pub/player/${form.username}/games/${year}/${monthPadded}`);\n    const data = await response.json();\n    return data;\n  }\n\n  // takes form data as input, and returns all chess data in range (calls getChessData function) \n  async function collectAllData(e){\n    e.preventDefault();\n    \n    if(form.username === \"\"){\n      alert(\"Please enter a username.\");\n    } else if(form.fromYear === 0 || form.toYear === 0){\n      alert(\"Please enter a valid date range.\")\n    }else{\n      let fromMonth = (form.fromMonth);\n      let fromYear = (form.fromYear);\n      let toMonth = (form.toMonth);\n      let toYear = (form.toYear);\n\n      let allData = [];\n\n      while ((fromMonth !== toMonth) || (fromYear!==toYear)){\n        let curData = await getChessData(fromMonth, fromYear);\n        curData['games'].map((game)=>{\n          allData.push(game);\n        });\n        console.log(fromMonth,toMonth);\n        fromMonth ++;\n      }\n      setChessGames({\n        data: allData\n      });\n      // console.log(allData);\n    }\n    }\n\n\n  return (\n    <div className=\"searchbar\">\n      <form>\n        <label>Chess.com username: </label>\n        <input name=\"username\" type=\"search\" placeholder=\"Enter username\" onChange={(e)=>handleChange(e)}></input>\n        &nbsp; &nbsp; \n        <label>From: </label>\n        <input name=\"fromDate\" type=\"month\" onChange={(e)=>handleChange(e)}></input>\n        &nbsp; &nbsp; \n        <label>To: </label>\n        <input name=\"toDate\" type=\"month\" onChange={(e)=>handleChange(e)}></input>\n        <button type=\"submit\" onClick={(e)=>collectAllData(e)}>GetData</button>\n      </form>\n      \n    </div>\n  )\n}\n\nexport default SearchBar"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}