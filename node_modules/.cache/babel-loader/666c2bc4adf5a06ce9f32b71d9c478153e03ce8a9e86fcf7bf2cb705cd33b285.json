{"ast":null,"code":"var _jsxFileName = \"/Users/tommymarkopoulos/Desktop/coding/Git_Repos/chess-app/src/components/SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchBar() {\n  _s();\n  const [form, setForm] = useState({\n    username: \"\",\n    fromDate: \"\",\n    toDate: \"\"\n  });\n  const [chessgames, setChessGames] = useState([]);\n  const handleChange = e => {\n    let name = e.target.name;\n    let value = e.target.value;\n    if (name === 'username') {\n      setForm({\n        ...form,\n        username: value\n      });\n    }\n    if (name === 'fromDate') {\n      setForm({\n        ...form,\n        fromDate: value\n      });\n    }\n    if (name === 'toDate') {\n      setForm({\n        ...form,\n        toDate: value\n      });\n    }\n  };\n\n  // function that takes date (month-year) as input and returns chess data\n\n  async function getChessData(month, year) {\n    console.log(\"inside getChessData function\");\n    const response = await fetch(`https://api.chess.com/pub/player/${form.username}/games/${year}/${month}`);\n    const data = await response.json();\n    return data;\n  }\n\n  // takes form data as input, and returns all chess data in range (calls getChessData function) \n  async function collectAllData(e) {\n    console.log(\"hi!\");\n    e.preventDefault();\n    if (form.username === \"\") {\n      alert(\"Please enter a username.\");\n    } else if (form.fromDate === \"\" || form.toDate === \"\") {\n      alert(\"Please enter a valid date range.\");\n    } else {\n      let fromMonth = form.fromDate.slice(-2);\n      let fromYear = form.fromDate.slice(0, 4);\n      let toMonth = form.toDate.slice(-2);\n      let toYear = form.toDate.slice(0, 4);\n      let startDate = new Date(`${fromYear}-${fromMonth}`);\n      let endDate = new Date(`${toYear}-${toMonth}`);\n      let allData = [];\n      while (startDate <= endDate) {\n        let curData = await getChessData(fromMonth, fromYear);\n        curData['games'].map(game => {\n          allData.push(game);\n        });\n        console.log('left the .map()');\n      }\n      startDate.setMonth(startDate.getMonth() + 1);\n      setChessGames({\n        data: allData\n      });\n      console.log(form.chessgames);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchbar\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Chess.com username: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"username\",\n        type: \"search\",\n        placeholder: \"Enter username\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), \"\\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"From: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"fromDate\",\n        type: \"month\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), \"\\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"To: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"toDate\",\n        type: \"month\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: e => collectAllData(e),\n        children: \"GetData\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchBar, \"uBfmxG7Zqh849OKPegLi0sMZAxg=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SearchBar","_s","form","setForm","username","fromDate","toDate","chessgames","setChessGames","handleChange","e","name","target","value","getChessData","month","year","console","log","response","fetch","data","json","collectAllData","preventDefault","alert","fromMonth","slice","fromYear","toMonth","toYear","startDate","Date","endDate","allData","curData","map","game","push","setMonth","getMonth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/tommymarkopoulos/Desktop/coding/Git_Repos/chess-app/src/components/SearchBar.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction SearchBar() {\n\n  const [form, setForm] = useState({\n    username: \"\",\n    fromDate: \"\",\n    toDate: \"\"\n  })\n\n  const [chessgames, setChessGames] = useState([])\n\n  const handleChange = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n\n    if (name === 'username') {\n        setForm({...form, username: value})\n      }\n    if (name === 'fromDate') {\n      setForm({...form, fromDate: value})\n    }\n    if (name === 'toDate') {\n      setForm({...form, toDate: value})\n    }\n  }\n\n\n  // function that takes date (month-year) as input and returns chess data\n\n  async function getChessData(month, year){\n    console.log(\"inside getChessData function\")\n    const response = await fetch(`https://api.chess.com/pub/player/${form.username}/games/${year}/${month}`);\n    const data = await response.json();\n    return data;\n  }\n\n  // takes form data as input, and returns all chess data in range (calls getChessData function) \n  async function collectAllData(e){\n    console.log(\"hi!\");\n    e.preventDefault();\n    \n    if(form.username === \"\"){\n      alert(\"Please enter a username.\");\n    } else if(form.fromDate === \"\" || form.toDate === \"\"){\n      alert(\"Please enter a valid date range.\")\n    }else{\n      let fromMonth = form.fromDate.slice(-2);\n      let fromYear = form.fromDate.slice(0,4);\n      let toMonth = form.toDate.slice(-2);\n      let toYear = form.toDate.slice(0,4);\n\n      let startDate = new Date(`${fromYear}-${fromMonth}`);\n      let endDate = new Date(`${toYear}-${toMonth}`);\n      let allData = [];\n\n      while (startDate<=endDate){\n        let curData = await getChessData(fromMonth, fromYear);\n        curData['games'].map((game)=>{\n          allData.push(game);\n        });\n        console.log('left the .map()')\n        }\n        startDate.setMonth(startDate.getMonth()+1);\n\n      setChessGames({\n        data: allData\n      });\n      console.log(form.chessgames);\n    }\n    }\n\n\n  return (\n    <div className=\"searchbar\">\n      <form>\n        <label>Chess.com username: </label>\n        <input name=\"username\" type=\"search\" placeholder=\"Enter username\" onChange={(e)=>handleChange(e)}></input>\n        &nbsp; &nbsp; \n        <label>From: </label>\n        <input name=\"fromDate\" type=\"month\" onChange={(e)=>handleChange(e)}></input>\n        &nbsp; &nbsp; \n        <label>To: </label>\n        <input name=\"toDate\" type=\"month\" onChange={(e)=>handleChange(e)}></input>\n        <button type=\"submit\" onClick={(e)=>collectAllData(e)}>GetData</button>\n      </form>\n      \n    </div>\n  )\n}\n\nexport default SearchBar"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}